<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Pavel Karateev</title><link>http://pavelkarateev.com/</link><description>Work hard - die Pythonic</description><atom:link href="http://pavelkarateev.com/rss.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2019 &lt;a href="mailto:karateev.pavel@ya.ru"&gt;Pavel Karateev&lt;/a&gt; </copyright><lastBuildDate>Sun, 10 Mar 2019 09:24:19 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Parallel and Remote Test Execution with pytest-xdist</title><link>http://pavelkarateev.com/posts/2019/02/06/xdist/</link><dc:creator>Pavel Karateev</dc:creator><description>&lt;div&gt;&lt;p&gt;2019.1 PyCharm version will come with native &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;pytest-xdist&lt;/span&gt;&lt;/tt&gt; support so I
spent some time playing with it to discover a bunch of neat features. Some were
a bit hard to get working right away so here are some notes for future
references.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://pavelkarateev.com/posts/2019/02/06/xdist/"&gt;Read more…&lt;/a&gt; (2 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>pycharm</category><category>pytest</category><category>pytest-xdist</category><category>python</category><guid>http://pavelkarateev.com/posts/2019/02/06/xdist/</guid><pubDate>Sat, 09 Mar 2019 22:00:00 GMT</pubDate></item><item><title>Hyperskill</title><link>http://pavelkarateev.com/posts/2019/01/17/hyperskill/</link><dc:creator>Pavel Karateev</dc:creator><description>&lt;div&gt;&lt;p&gt;I had a great chance to visit &lt;a class="reference external" href="https://hi.hyperskill.org/about"&gt;Hyperskill&lt;/a&gt; presentation last month, which is a
new MOOC (?) provider for Java and Kotlin (at the moment of writing). Few days
ago I also finished the first Java project there and want to quickly write my
impression.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://pavelkarateev.com/posts/2019/01/17/hyperskill/"&gt;Read more…&lt;/a&gt; (3 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>java</category><category>kotlin</category><category>mooc</category><guid>http://pavelkarateev.com/posts/2019/01/17/hyperskill/</guid><pubDate>Thu, 17 Jan 2019 07:30:00 GMT</pubDate></item><item><title>Custom Language Highlighting in PyCharm</title><link>http://pavelkarateev.com/posts/2019/01/07/highlighting/</link><dc:creator>Pavel Karateev</dc:creator><description>&lt;div&gt;&lt;p&gt;It is a quite common request to support new programming and config languages in
PyCharm. While some of them like (e.g. Markdown, JavaScript) are supported
from the box and for some (e.g. Makefile) you can install a third party
plugin, others have no support at all at the moment. Of course, you can write a
new plugin by yourself, but it is too time consuming in many cases, so I
present you a different approach, a bit harsh and not so feature-rich but
quite useful in many cases (I use it myself) - Custom File Types.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://pavelkarateev.com/posts/2019/01/07/highlighting/"&gt;Read more…&lt;/a&gt; (3 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>pycharm</category><guid>http://pavelkarateev.com/posts/2019/01/07/highlighting/</guid><pubDate>Mon, 07 Jan 2019 11:30:00 GMT</pubDate></item><item><title>Runtime bytecode manipulations</title><link>http://pavelkarateev.com/posts/2018/09/07/bytecode/</link><dc:creator>Pavel Karateev</dc:creator><description>&lt;div&gt;&lt;p&gt;Let's say you have a class with a method which raises an exception on the first
line and prints something on the second. Is it possible to reach print without
editing the source code or using &lt;tt class="docutils literal"&gt;pdb&lt;/tt&gt;? It is indeed, we will do it by
patching a method bytecode in the runtime.&lt;/p&gt;
&lt;p&gt;Do not try this at home!&lt;/p&gt;
&lt;p&gt;&lt;a href="http://pavelkarateev.com/posts/2018/09/07/bytecode/"&gt;Read more…&lt;/a&gt; (2 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>bytecode</category><category>python</category><guid>http://pavelkarateev.com/posts/2018/09/07/bytecode/</guid><pubDate>Fri, 07 Sep 2018 11:30:00 GMT</pubDate></item><item><title>Linters and PyCharm</title><link>http://pavelkarateev.com/posts/2017/08/13/linters/</link><dc:creator>Pavel Karateev</dc:creator><description>&lt;div&gt;&lt;p&gt;Today's topic is linters. Not sure about you but I'm a huge fun of linters in Python. As a PyCharm user I already have great inspections and stuff you may expect from a good IDE but as a code style maniac it's absolutely not enough for me. So my "standard" pack of linters include: &lt;tt class="docutils literal"&gt;pylint&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;pydocstyle&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;pycodestyle&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;mypy&lt;/tt&gt;. Not sure if one can call &lt;tt class="docutils literal"&gt;mypy&lt;/tt&gt; a linter but let's live with it for now. I'll briefly describe each one of them, touch PyCharm integration via external tools and provide a live example from one of my repositories on github. Let's go.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://pavelkarateev.com/posts/2017/08/13/linters/"&gt;Read more…&lt;/a&gt; (12 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><guid>http://pavelkarateev.com/posts/2017/08/13/linters/</guid><pubDate>Sun, 13 Aug 2017 13:34:26 GMT</pubDate></item><item><title>Завершен курс "Python основы и применение"</title><link>http://pavelkarateev.com/posts/2016/06/16/python-basics-and-usage/</link><dc:creator>Pavel Karateev</dc:creator><description>&lt;div&gt;&lt;p&gt;Завершил курс "&lt;a class="reference external" href="https://stepic.org/course/Python-%D0%BE%D1%81%D0%BD%D0%BE%D0%B2%D1%8B-%D0%B8-%D0%BF%D1%80%D0%B8%D0%BC%D0%B5%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5-512"&gt;Python - Основы и применение&lt;/a&gt;" от &lt;a class="reference external" href="https://stepic.org/"&gt;Stepic.org&lt;/a&gt;. Несмотря на название курс оказался весьма интересным и не таким уж и базовым - полные новички в Python могут столкнуться с проблемами. Мне очень понравилось, что были разобраны некоторые традиционно пропускаемые вопросы (пресловутый Method Resolution Order), которые как раз очень любят спрашивать на собеседованиях. Чуть подробнее о плюсах и минусах, а также краткое содержание внутри.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://pavelkarateev.com/posts/2016/06/16/python-basics-and-usage/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><guid>http://pavelkarateev.com/posts/2016/06/16/python-basics-and-usage/</guid><pubDate>Tue, 14 Jun 2016 21:00:00 GMT</pubDate></item><item><title>Перевод книги "Intermediate Python"</title><link>http://pavelkarateev.com/posts/2016/06/15/intermediate-python/</link><dc:creator>Pavel Karateev</dc:creator><description>&lt;div&gt;&lt;p&gt;Не так давно я закончил перевод небольшой книги от разработчика из
Пакистана - &lt;a href="https://twitter.com/yasoobkhalid"&gt;Yasoob Khalid&lt;/a&gt; -
"&lt;a href="https://github.com/lancelote/interpy-ru"&gt;Intermediate Python&lt;/a&gt;". Не уверен как
лучше перевести &lt;em&gt;Intermediate&lt;/em&gt; в данном контексте, но смысл в том что книга для
уже освоивших базовый Python программистов. Её основная идея дать читателю краткий обзор
нюансов языка, которые остаются за кадром базовых курсов/книг/руководств, ведь в
Python при всей его интуитивности и простоте есть немало сложных, специфических,
да и просто традиционных решений, как впрочем и в любом другом языке.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://pavelkarateev.com/posts/2016/06/15/intermediate-python/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><guid>http://pavelkarateev.com/posts/2016/06/15/intermediate-python/</guid><pubDate>Tue, 14 Jun 2016 21:00:00 GMT</pubDate></item><item><title>First FreeCodeCamp project is complete</title><link>http://pavelkarateev.com/posts/2016/02/18/oss-university-start/</link><dc:creator>Pavel Karateev</dc:creator><description>&lt;div&gt;&lt;p&gt;Not long ago I have started my &lt;a class="reference external" href="http://www.freecodecamp.com/lancelote"&gt;FreeCodeCamp&lt;/a&gt; path thanks to &lt;a class="reference external" href="https://smartprogress.do/goal/162912/"&gt;smartprogress.do&lt;/a&gt; to gain a better knowledge of frontend technology stack. I was somewhat sceptical that time about my capabilities in the area ("I am not a designer - I'm an engineer") and I did no like front end altogether. All that billions of JS-related technologies and HTML with CSS on top of the cake, gosh! Time has passed and I have catch myself today enjoining of frontend development. So, what is happened to me? Not much in reality.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://pavelkarateev.com/posts/2016/02/18/oss-university-start/"&gt;Read more…&lt;/a&gt; (2 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><guid>http://pavelkarateev.com/posts/2016/02/18/oss-university-start/</guid><pubDate>Wed, 17 Feb 2016 21:00:00 GMT</pubDate></item><item><title>OSS University Path</title><link>http://pavelkarateev.com/posts/2016/01/11/oss-university-start/</link><dc:creator>Pavel Karateev</dc:creator><description>&lt;div&gt;&lt;p&gt;Sadly I have no solid background in CS. There were few CS-related courses in
the University (C++, Optimisation, math and so on), but the major part of my
expertise comes from the experience. My field knowledge is pretty broad, but it
is shallow in some places (in a lot of places) and has big holes here and there.
That is why I really hope Open Source Society University initiative will help
me build vast and complete CS "base".&lt;/p&gt;
&lt;p&gt;&lt;a href="http://pavelkarateev.com/posts/2016/01/11/oss-university-start/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><guid>http://pavelkarateev.com/posts/2016/01/11/oss-university-start/</guid><pubDate>Sun, 10 Jan 2016 21:00:00 GMT</pubDate></item><item><title>Taskbuster Tutorial</title><link>http://pavelkarateev.com/posts/2015/12/04/taskbuster-tutorial/</link><dc:creator>Pavel Karateev</dc:creator><description>&lt;div&gt;&lt;p&gt;From time to time I check out my &lt;strong&gt;ToRead&lt;/strong&gt; folder (believe me it is infinite), and guess what I found there a week ago - BEST DJANGO TUTORIAL I EVER READ! Just go ahead and look at this beauty: &lt;a class="reference external" href="http://www.marinamele.com/taskbuster-django-tutorial"&gt;Taskbuster Django Tutorial&lt;/a&gt; by Marina Mele. Table of content is available inside the &lt;strong&gt;Read more...&lt;/strong&gt;. So why am I so excited about it? Because &lt;a class="reference external" href="https://twitter.com/Marina_Mele"&gt;Marina&lt;/a&gt; used a rare way to approach tutorial creation. She did not start with &lt;em&gt;no one used in real world&lt;/em&gt; practises like many authors do, but goes straight to the best Django development patterns. She even wrote about environment variables!&lt;/p&gt;
&lt;p&gt;&lt;a href="http://pavelkarateev.com/posts/2015/12/04/taskbuster-tutorial/"&gt;Read more…&lt;/a&gt; (2 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><guid>http://pavelkarateev.com/posts/2015/12/04/taskbuster-tutorial/</guid><pubDate>Thu, 03 Dec 2015 21:00:00 GMT</pubDate></item></channel></rss>